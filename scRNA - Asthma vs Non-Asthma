library(Seurat)
library(cowplot)
library(patchwork)
getwd()
setwd("C:/Users/PHEZ4X/Documents/Projects/Informatics Project/Non-Lab Data/GSE146046 (HDM Allergen Tcells)/scRNA Data/Txt Files")
memory.limit(size=999999999)
allergen_teff_umi <- read.delim("allergen_Teff_umi.txt")
row.names(allergen_teff_umi) <- allergen_teff_umi[,1]
allergen_teff_umi <- allergen_teff_umi[,-1]
allergen_teff_umi <- as.sparse(allergen_teff_umi)
allergen_Th2_umi <- read.delim("allergen_Th2_umi.txt")
row.names(allergen_Th2_umi) <- allergen_Th2_umi[,1]
allergen_Th2_umi <- allergen_Th2_umi[,-1]
allergen_Th2_umi <- as.sparse(allergen_Th2_umi)
allergen_Tneg_umi <- read.delim("allergen_Tneg_umi.txt")
row.names(allergen_Tneg_umi) <- allergen_Tneg_umi[,1]
allergen_Tneg_umi <- allergen_Tneg_umi[,-1]
allergen_Tneg_umi <- as.sparse(allergen_Tneg_umi)
allergen_Treg_umi <- read.delim("allergen_Treg_umi.txt")
row.names(allergen_Treg_umi) <- allergen_Treg_umi[,1]
allergen_Treg_umi <- allergen_Treg_umi[,-1]
allergen_Treg_umi <- as.sparse(allergen_Treg_umi)
View(allergen_Th2_umi)
View(allergen_teff_umi)
View(allergen_Tneg_umi)
View(allergen_Treg_umi)
Meta <- read.csv("GSE146170_metadata - Edited.csv")
Meta <- as.data.frame(Meta)
class(Meta)
row.names(Meta) <- Meta[,1]
Meta <- Meta[,-1]
Th2 <- CreateSeuratObject(counts = allergen_Th2_umi, min.cells = 3, min.features = 200, meta.data = Meta)
teff <- CreateSeuratObject(counts = allergen_teff_umi, min.cells = 3, min.features = 200, meta.data = Meta)
Tneg <- CreateSeuratObject(counts = allergen_Tneg_umi, min.cells = 3, min.features = 200, meta.data = Meta)
Treg <- CreateSeuratObject(counts = allergen_Treg_umi, min.cells = 3, min.features = 200, meta.data = Meta)
head(Th2@meta.data, 5)
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'orig.ident')]
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'ident')]
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'origlib')]
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'experiment')]
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'donor')]
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'sex')]
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'Dim1')]
teff@meta.data <- teff@meta.data[, -which(colnames(teff@meta.data) %in% 'Dim2')]
head(teff@meta.data, 5)
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'orig.ident')]
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'ident')]
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'origlib')]
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'experiment')]
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'donor')]
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'sex')]
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'Dim1')]
Th2@meta.data <- Th2@meta.data[, -which(colnames(Th2@meta.data) %in% 'Dim2')]
head(Th2@meta.data, 5)
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'orig.ident')]
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'ident')]
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'origlib')]
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'experiment')]
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'donor')]
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'sex')]
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'Dim1')]
Tneg@meta.data <- Tneg@meta.data[, -which(colnames(Tneg@meta.data) %in% 'Dim2')]
head(Tneg@meta.data, 5)
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'orig.ident')]
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'ident')]
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'origlib')]
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'experiment')]
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'donor')]
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'sex')]
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'Dim1')]
Treg@meta.data <- Treg@meta.data[, -which(colnames(Treg@meta.data) %in% 'Dim2')]
head(Treg@meta.data, 5)
pbmc.big <- merge(Th2, y = c(teff, Tneg, Treg), add.cell.ids = c("Th2", "teff", "Tneg", "Treg"), project = "PBMC")
pbmc.big
head(colnames(pbmc.big))
tail(colnames(pbmc.big))

pbmc.big[["percent.mt"]] <- PercentageFeatureSet(pbmc.big, pattern = "^MT-")
pbmc <- subset(pbmc.big, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- NormalizeData(pbmc)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(pbmc), 10)

unique(sapply(X = strsplit(colnames(pbmc.big), split = "_"), FUN = "[", 1))
table(pbmc.big$diseasegroup)
pbmc.list <- SplitObject(pbmc.big, split.by = "diseasegroup")
pbmc.list <- lapply(X = pbmc.list, FUN = function(x) {
  x <- NormalizeData(x)
  x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 2000)
})
immune.anchors <- FindIntegrationAnchors(object.list = pbmc.list, dims = 1:20)
immune.combined <- IntegrateData(anchorset = immune.anchors, dims = 1:20)
DefaultAssay(immune.combined) <- "integrated"
immune.combined <- ScaleData(immune.combined, verbose = FALSE)
immune.combined <- RunPCA(immune.combined, npcs = 30, verbose = FALSE)
immune.combined <- RunUMAP(immune.combined, reduction = "pca", dims = 1:20)
immune.combined <- FindNeighbors(immune.combined, reduction = "pca", dims = 1:20)
immune.combined <- FindClusters(immune.combined, resolution = 0.5)
p1 <- DimPlot(immune.combined, reduction = "umap", group.by = "diseasegroup")
p2 <- DimPlot(immune.combined, reduction = "umap", label = TRUE)
plot_grid(p1, p2)
